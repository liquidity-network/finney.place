"use strict";var __awaiter=this&&this.__awaiter||function(o,s,a,c){return new(a||(a=Promise))(function(e,n){function t(e){try{i(c.next(e))}catch(e){n(e)}}function r(e){try{i(c.throw(e))}catch(e){n(e)}}function i(n){n.done?e(n.value):new a(function(e){e(n.value)}).then(t,r)}i((c=c.apply(o,s||[])).next())})},__generator=this&&this.__generator||function(t,r){var i,o,s,e,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return e={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function n(n){return function(e){return function(n){if(i)throw new TypeError("Generator is already executing.");for(;a;)try{if(i=1,o&&(s=2&n[0]?o.return:n[0]?o.throw||((s=o.return)&&s.call(o),0):o.next)&&!(s=s.call(o,n[1])).done)return s;switch(o=0,s&&(n=[2&n[0],s.value]),n[0]){case 0:case 1:s=n;break;case 4:return a.label++,{value:n[1],done:!1};case 5:a.label++,o=n[1],n=[0];continue;case 7:n=a.ops.pop(),a.trys.pop();continue;default:if(!(s=0<(s=a.trys).length&&s[s.length-1])&&(6===n[0]||2===n[0])){a=0;continue}if(3===n[0]&&(!s||n[1]>s[0]&&n[1]<s[3])){a.label=n[1];break}if(6===n[0]&&a.label<s[1]){a.label=s[1],s=n;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(n);break}s[2]&&a.ops.pop(),a.trys.pop();continue}n=r.call(t,a)}catch(e){n=[6,e],o=0}finally{i=s=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,e])}}};Object.defineProperty(exports,"__esModule",{value:!0}),require("reflect-metadata");var ClassContainerOption,inversify_1=require("inversify"),_1=require("."),rxjs_1=require("rxjs"),web3_connectivity_model_1=require("./models/state/web3-connectivity.model"),inversify_types_1=require("./inversify.types"),logging_1=require("./services/logging"),ethereum_rpc_service_1=require("./interfaces/default/ethereum-rpc.service"),memory_storage_service_1=require("./interfaces/default/memory-storage.service"),console_logging_service_1=require("./interfaces/default/console-logging.service"),xhr_request_api_service_1=require("./interfaces/default/xhr-request-api.service"),constant_client_provider_service_1=require("./interfaces/default/constant-client-provider.service"),NOCUSTClassFactory=function(){function n(){}return n.createClassContainerInternal=function(e,o,n,t,r,i){var s=this,a=new inversify_1.Container({defaultScope:"Singleton",autoBindInjectable:!0}),c=new rxjs_1.Subject;return i&&rxjs_1.timer(250,100).subscribe(function(){return __awaiter(s,void 0,void 0,function(){var n,t,r,i;return __generator(this,function(e){switch(e.label){case 0:return t=(n=c).next,r=web3_connectivity_model_1.Web3Connectivity.bind,[4,o.isConnected];case 1:return i=[void 0,e.sent()],[4,o.accounts];case 2:return t.apply(n,[new(r.apply(web3_connectivity_model_1.Web3Connectivity,i.concat([e.sent()])))]),[2]}})})}),a.bind(inversify_types_1.TYPES.SUBJECT.WEB3_CONNECTIVITY).toConstantValue(c),a.bind(inversify_types_1.TYPES.SUBJECT.HUB_STATE_FETCH).toConstantValue(new rxjs_1.Subject),a.bind(inversify_types_1.TYPES.SUBJECT.CONTRACT_STATE_FETCH).toConstantValue(new rxjs_1.Subject),a.bind(inversify_types_1.TYPES.SUBJECT.WALLET_STATE_SYNC).toConstantValue(new rxjs_1.Subject),a.bind(inversify_types_1.TYPES.SUBJECT.WALLET_STATE_POLL).toConstantValue(new rxjs_1.Subject),a.bind(inversify_types_1.TYPES.EXTERNAL.RPC_PROVIDER_INTERFACE).toConstantValue(e),a.bind(inversify_types_1.TYPES.EXTERNAL.REST_API_INTERFACE).toConstantValue(r),a.bind(inversify_types_1.TYPES.EXTERNAL.WEB3_SERVICE_INTERFACE).toConstantValue(o),a.bind(inversify_types_1.TYPES.EXTERNAL.STORAGE_MANAGER_INTERFACE).toConstantValue(n),a.bind(inversify_types_1.TYPES.EXTERNAL.LOGGING_INTERFACE).toConstantValue(t),logging_1.Logging.loggingInterface=t,a},n.createClassContainer=function(e){if(e.rpcProvider&&e.rpcProvider!==ClassContainerOption.NONE){if(e.web3Service!=ClassContainerOption.DEFAULT)throw Error("If an RPC Api is provided, the Web3 Service must be set to ClassContainerOption.DEFAULT.");e.web3Service=new ethereum_rpc_service_1.EthereumRPCService(e.rpcProvider)}else if(!e.web3Service||e.rpcProvider===ClassContainerOption.NONE||e.web3Service===ClassContainerOption.DEFAULT)throw Error("If no RPC Api is provided, a Web3 Service instance must be provided.");if(e.storageManager===ClassContainerOption.DEFAULT&&(e.storageManager=new memory_storage_service_1.MemoryStorageService),e.logging===ClassContainerOption.DEFAULT&&(e.logging=new console_logging_service_1.ConsoleLoggingService),e.restApi===ClassContainerOption.DEFAULT&&(e.restApi=new xhr_request_api_service_1.XHRRequestApiService),[e.storageManager,e.logging,e.restApi].some(function(e){return!e||e===ClassContainerOption.NONE}))throw Error("Incomplete config: storageManager, logging and resApi must be set.");return n.createClassContainerInternal(e.rpcProvider,e.web3Service,e.storageManager,e.logging,e.restApi,e.subscribeToWeb3Connectivity)},n.createDefaultClassContainer=function(e){return n.createClassContainer({rpcProvider:new constant_client_provider_service_1.ConstantRPCClientProvider(e),web3Service:ClassContainerOption.DEFAULT,storageManager:ClassContainerOption.DEFAULT,logging:ClassContainerOption.DEFAULT,restApi:ClassContainerOption.DEFAULT,subscribeToWeb3Connectivity:!1})},n.createNOCUSTClient=function(e){return n.createClassContainer(e).get(_1.NOCUSTClient)},n.createDefaultNOCUSTClient=function(e){return n.createDefaultClassContainer(e).get(_1.NOCUSTClient)},n}();exports.NOCUSTClassFactory=NOCUSTClassFactory,function(e){e[e.DEFAULT=0]="DEFAULT",e[e.NONE=1]="NONE"}(ClassContainerOption=exports.ClassContainerOption||(exports.ClassContainerOption={}));