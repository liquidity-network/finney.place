import BigNumber from 'bignumber.js';
import { Signature } from '..';
import { Provider } from 'web3/providers';
import Web3 from 'web3';
import { ABIDefinition } from 'web3/eth/abi';
import Contract from 'web3/eth/contract';
export interface Web3ServiceInterface {
    readonly rpc: Web3;
    readonly accounts: Promise<string[]>;
    readonly isConnected: Promise<boolean>;
    readonly currentProvider: Provider;
    readonly canSignPersonal: boolean;
    getContractAt(abi: ABIDefinition[], contractAddress: string): Contract;
    networkId(): Promise<number>;
    latestBlockNumber(): Promise<number>;
    balanceOf(address: string): Promise<BigNumber>;
    signPersonalMessage(messageDigest: string, walletAddress: string): Promise<string>;
    signRawDigest(messageDigest: string, walletAddress: string): Promise<string>;
    recoverPersonalSigningAddress(data: any, signature: Signature): Promise<string>;
    mineTestBlock(): Promise<any>;
    getOnChainTransactionReceipt(txHash: string): Promise<any>;
}
