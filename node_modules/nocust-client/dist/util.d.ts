import BigNumber from 'bignumber.js';
import { Observable } from 'rxjs';
export declare function remove0xPrefix(hex: string): string;
export declare function add0xPrefix(hex: string): string;
export declare function isSameHexValue(a: string, b: string): boolean;
export declare const Web3: any;
export declare const Web3Utils: any;
export declare const JSONbig: any;
export declare const EMPTY_HASH = "0x0000000000000000000000000000000000000000000000000000000000000000";
export declare function getWeb3HttpProvider(address?: string): any;
export interface Implementation<T> {
    new (...args: any[]): any;
}
export declare function promiseExecutorCallback(resolve: any, reject: any): (err: any, res: any) => void;
export declare function bigNumberValueOfResult(result: any): BigNumber;
export declare function intValueOfResult(result: any): number;
export declare function toBigNumber(input: any): BigNumber;
export declare function valueOfResult(result: any, idx?: any): any;
export declare function indexedValueOfResult(idx: any): any;
export declare function removeDuplicateFromArray(array: any[]): any[];
export declare function addTrailingSlashToUrl(url: string): "" | "/";
export declare function lqdWrapper(messageDigest: any): any;
export declare function sleep(ms: number): Promise<void>;
export declare function observableToPromiseWithTimeout<T>(observable: Observable<T>, timeout: number, timeoutError: Error): Promise<T>;
export declare function deepClone(obj: any): any;
export declare function detectEnvironment(): string;
