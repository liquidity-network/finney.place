import { Observer, Observable } from 'rxjs';
import { ContractApiService } from './contract-api.service';
import { StateUpdatePoll } from '../models/state/state-poll.model';
import { ContractState } from '../models/state/contract-state.model';
import { Wallet } from '../models/wallet/wallet.model';
import { Web3ServiceInterface } from '../interfaces/web3-service.interface';
export declare class ContractStateService {
    stateUpdatePollObservable: Observable<StateUpdatePoll>;
    private contractStateFetchObserver;
    private web3Service;
    private contractApi;
    private stateCache;
    private parametersCache;
    constructor(stateUpdatePollObservable: Observable<StateUpdatePoll>, contractStateFetchObserver: Observer<ContractState>, web3Service: Web3ServiceInterface, contractApi: ContractApiService);
    fetchContractState(wallet: Wallet): Promise<ContractState>;
    private fetchContractStateConstants;
    private fetchContractStateVariables;
}
