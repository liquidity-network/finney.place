import { StorageManagerInterface } from '../interfaces/storage-manager.interface';
import { Wallet } from '../models/wallet/wallet.model';
import { WalletMetadataInterface } from '../interfaces/data.interface';
export declare class WalletStorageService {
    private storage;
    private static INDEX_KEY;
    constructor(storage: StorageManagerInterface);
    saveWallet(wallet: Wallet): Promise<boolean>;
    loadWallet(walletAddress: string, networkId: number, contractAddress: string, tokenAddress: string): Promise<Wallet>;
    wallets(): Promise<Map<string, WalletMetadataInterface>>;
    private addToIndex;
    private removeFromIndex;
    static walletInstanceKey(wallet: Wallet): string;
    static walletKey(walletAddress: string, networkId: number, contractAddress: string, tokenAddress: string): string;
}
