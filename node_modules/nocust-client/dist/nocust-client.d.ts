import { Web3ServiceInterface } from './interfaces/web3-service.interface';
import { OperatorApiService } from './services/operator-api.service';
import { ContractApiService } from './services/contract-api.service';
import { ContractStateService } from './services/contract-state.service';
import { OperatorStateService } from './services/operator-state.service';
import { WalletStateService } from './services/wallet-state.service';
import { Web3Connectivity } from './models/state/web3-connectivity.model';
import { Observable } from 'rxjs';
import { OperatorState } from './models/state/operator-state.model';
import { ContractState } from './models/state/contract-state.model';
import { WalletState } from './models/state/wallet-state.model';
import { Observer } from 'rxjs';
import { StateUpdatePoll } from './models/state/state-poll.model';
import { PollService } from './services/poll.service';
import { WalletStorageService } from './services/wallet-storage.service';
import { DisputeService } from './services/dispute.service';
import { TransactionService } from './services/transaction.service';
import { TexService } from './services/tex.service';
export declare class NOCUSTClient {
    walletStorageService: WalletStorageService;
    synchronizationPollService: PollService;
    web3Service: Web3ServiceInterface;
    operatorApiService: OperatorApiService;
    contractApiService: ContractApiService;
    contractStateFetchService: ContractStateService;
    operatorStateService: OperatorStateService;
    walletStateService: WalletStateService;
    disputeService: DisputeService;
    transactionService: TransactionService;
    texService: TexService;
    walletStatePollObserver: Observer<StateUpdatePoll>;
    web3ConnectivityObservable: Observable<Web3Connectivity>;
    operatorStateObservable: Observable<OperatorState>;
    contractStateObservable: Observable<ContractState>;
    walletStateSyncObservable: Observable<WalletState>;
    constructor(walletStorageService: WalletStorageService, synchronizationPollService: PollService, web3Service: Web3ServiceInterface, operatorApiService: OperatorApiService, contractApiService: ContractApiService, contractStateFetchService: ContractStateService, operatorStateService: OperatorStateService, walletStateService: WalletStateService, disputeService: DisputeService, transactionService: TransactionService, texService: TexService, walletStatePollObserver: Observer<StateUpdatePoll>, web3ConnectivityObservable: Observable<Web3Connectivity>, operatorStateObservable: Observable<OperatorState>, contractStateObservable: Observable<ContractState>, walletStateSyncObservable: Observable<WalletState>);
}
