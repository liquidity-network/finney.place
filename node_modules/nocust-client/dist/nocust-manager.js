"use strict";var __awaiter=this&&this.__awaiter||function(a,s,i,c){return new(i||(i=Promise))(function(e,t){function r(e){try{o(c.next(e))}catch(e){t(e)}}function n(e){try{o(c.throw(e))}catch(e){t(e)}}function o(t){t.done?e(t.value):new i(function(e){e(t.value)}).then(r,n)}o((c=c.apply(a,s||[])).next())})},__generator=this&&this.__generator||function(r,n){var o,a,s,e,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return e={next:t(0),throw:t(1),return:t(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function t(t){return function(e){return function(t){if(o)throw new TypeError("Generator is already executing.");for(;i;)try{if(o=1,a&&(s=2&t[0]?a.return:t[0]?a.throw||((s=a.return)&&s.call(a),0):a.next)&&!(s=s.call(a,t[1])).done)return s;switch(a=0,s&&(t=[2&t[0],s.value]),t[0]){case 0:case 1:s=t;break;case 4:return i.label++,{value:t[1],done:!1};case 5:i.label++,a=t[1],t=[0];continue;case 7:t=i.ops.pop(),i.trys.pop();continue;default:if(!(s=0<(s=i.trys).length&&s[s.length-1])&&(6===t[0]||2===t[0])){i=0;continue}if(3===t[0]&&(!s||t[1]>s[0]&&t[1]<s[3])){i.label=t[1];break}if(6===t[0]&&i.label<s[1]){i.label=s[1],s=t;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(t);break}s[2]&&i.ops.pop(),i.trys.pop();continue}t=n.call(r,i)}catch(e){t=[6,e],a=0}finally{o=s=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}([t,e])}}},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var logging_1=require("./services/logging"),bignumber_js_1=__importDefault(require("bignumber.js")),wallet_model_1=require("./models/wallet/wallet.model"),inversify_container_1=require("./inversify.container"),constant_client_provider_service_1=require("./interfaces/default/constant-client-provider.service"),operator_api_service_1=require("./services/operator-api.service"),util_1=require("./util"),nocust_manager_error_model_1=require("./models/state/nocust-manager-error.model"),contract_api_service_1=require("./services/contract-api.service"),SLASH_GAS_COST=new bignumber_js_1.default(100100),CONFIRMATION_TIMEOUT=2e4,NOCUSTManager=function(){function e(e){this.receiptSubscriptions=new Map,this.contractAddress=e.contractAddress,this.operatorApiUrl=e.operatorApiUrl;var t=util_1.detectEnvironment();"browser"!==t&&"react-native"!==t||(e.rpcApi.currentProvider._prepareRequest=function(){var t=new XMLHttpRequest;return t.open("POST",this.host,!0),t.setRequestHeader("Content-Type","application/json"),t.timeout=this.timeout&&1!==this.timeout?this.timeout:0,this.headers&&this.headers.forEach(function(e){t.setRequestHeader(e.name,e.value)}),t}),this.nocustClient=inversify_container_1.NOCUSTClassFactory.createNOCUSTClient({rpcProvider:new constant_client_provider_service_1.ConstantRPCClientProvider(e.rpcApi),web3Service:inversify_container_1.ClassContainerOption.DEFAULT,storageManager:e.storageManager||inversify_container_1.ClassContainerOption.DEFAULT,logging:e.logging||inversify_container_1.ClassContainerOption.DEFAULT,restApi:e.restApi||inversify_container_1.ClassContainerOption.DEFAULT,subscribeToWeb3Connectivity:!1})}return e.prototype.isAddressRegistered=function(t,r){return void 0===r&&(r=this.contractAddress),__awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),[4,this.nocustClient.operatorApiService.whoisWallet(r,t,this.operatorApiUrl)];case 1:return e.sent(),[3,3];case 2:return e.sent(),[2,!1];case 3:return[2]}})})},e.prototype.registerAddress=function(r,n){return void 0===n&&(n=this.contractAddress),__awaiter(this,void 0,void 0,function(){var t;return __generator(this,function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),[4,this.registerAddressInternal(r,n)];case 1:return e.sent(),[3,3];case 2:if((t=e.sent()).code===nocust_manager_error_model_1.NOCUSTError.NON_UNIQUE_TRANSFER)return[2];throw t;case 3:return[2]}})})},e.prototype.subscribeToIncomingTransfer=function(n,o,a){return void 0===a&&(a=this.contractAddress),__awaiter(this,void 0,void 0,function(){var t,r;return __generator(this,function(e){switch(e.label){case 0:return"all"===a&&(a=void 0),[4,this.nocustClient.operatorApiService.registerTransferWebSocketNotificationCallback({webAddress:this.operatorApiUrl,walletAddress:n,socketMessageType:operator_api_service_1.TransactionSocketMessageType.INCOMING_CONFIRMATION,tokenAddress:a})];case 1:return t=e.sent(),r=t.subscribe(function(e){util_1.isSameHexValue(e.recipient.address,n)&&o(e)}),[2,function(){return r.unsubscribe()}]}})})},e.prototype.sendTransaction=function(w){return __awaiter(this,void 0,void 0,function(){var t,r,n,o,a,s,i,c,u,l,_,d,h,g,p,f,S,m;return __generator(this,function(e){switch(e.label){case 0:return r=w.tokenAddress?w.tokenAddress:this.contractAddress,n=Date.now(),[4,this.getSyncedWalletState(w.from,r,!0)];case 1:o=e.sent().wallet,a=Date.now()-n,n=Date.now(),e.label=2;case 2:return e.trys.push([2,4,,5]),[4,this.nocustClient.transactionService.prepareOutgoingTransfer(o,w.to,util_1.toBigNumber(w.amount),!0,w.nonce)];case 3:return s=e.sent(),[3,5];case 4:throw!(i=e.sent())||404!==i.statusCode&&404!==i.code?i.code?i:new nocust_manager_error_model_1.NOCUSTManagerError("Could not prepare transfer",nocust_manager_error_model_1.NOCUSTError.PREPARE_TRANSFER_FAILURE,i):new nocust_manager_error_model_1.NOCUSTManagerError("The recipient "+w.to+" is not registered with the NOCUST operator for token "+(util_1.isSameHexValue(r,this.contractAddress)?"Ether":r)+", therefore he can't receive any transactions. The recipient needs to register with the operator first using registerAddress at least once.",nocust_manager_error_model_1.NOCUSTError.UNREGISTERED_WITH_COMMIT_CHAIN);case 5:if(c=Date.now()-n,!s)throw new nocust_manager_error_model_1.NOCUSTManagerError("Could not prepare transfer.",nocust_manager_error_model_1.NOCUSTError.PREPARE_TRANSFER_FAILURE);e.label=6;case 6:return e.trys.push([6,8,,9]),[4,Promise.all([this.nocustClient.contractApiService.sign(w.from,s.hashes.activeState),this.nocustClient.contractApiService.sign(w.from,s.hashes.marker)])];case 7:return t=e.sent(),u=t[0],l=t[1],[3,9];case 8:throw _=e.sent(),new nocust_manager_error_model_1.NOCUSTManagerError("Could not sign transfer",nocust_manager_error_model_1.NOCUSTError.SINGING_FAILURE,_);case 9:return n=Date.now(),[4,this.nocustClient.operatorApiService.registerTransferWebSocketNotificationCallback({webAddress:this.operatorApiUrl,walletAddress:w.from,socketMessageType:operator_api_service_1.TransactionSocketMessageType.INCOMING_CONFIRMATION,tokenAddress:r,nonce:s.transfer.nonce.toFixed(0)})];case 10:d=e.sent(),e.label=11;case 11:return e.trys.push([11,13,,14]),h=this.nocustClient.transactionService.sendOutgoingTransfer(o,s,u,l),g=util_1.observableToPromiseWithTimeout(d,CONFIRMATION_TIMEOUT,new nocust_manager_error_model_1.NOCUSTManagerError("Transfer confirmation timeout.",nocust_manager_error_model_1.NOCUSTError.CONFIRMATION_TIMEOUT)),logging_1.Logging.debug("Post transfer and wait for confirmation..."),[4,Promise.all([h,g])];case 12:return p=e.sent(),f=p[0],p[1],S=Date.now()-n,logging_1.Logging.debug("Sync time: "+a+" prepare time: "+c+" post and confirmation time: "+S),[2,f];case 13:throw(m=e.sent()).code===nocust_manager_error_model_1.NOCUSTError.CONFIRMATION_TIMEOUT?m:-1<m.message.search("must make a unique set.")?new nocust_manager_error_model_1.NOCUSTManagerError("Nonce already used for payment. Change Nonce.",nocust_manager_error_model_1.NOCUSTError.NON_UNIQUE_TRANSFER):new nocust_manager_error_model_1.NOCUSTManagerError("Could not post transfer to operator server",nocust_manager_error_model_1.NOCUSTError.POST_FAILURE,m);case 14:return[2]}})})},e.prototype.syncWallet=function(r,n){return void 0===n&&(n=this.contractAddress),__awaiter(this,void 0,void 0,function(){var t;return __generator(this,function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),[4,this.getSyncedWalletState(r,n,!1)];case 1:return e.sent(),[3,3];case 2:throw t=e.sent(),new Error("Sync failed "+t);case 3:return[2]}})})},e.prototype.deposit=function(o,a,s,i,c){return void 0===c&&(c=this.contractAddress),__awaiter(this,void 0,void 0,function(){var t,r,n;return __generator(this,function(e){switch(e.label){case 0:if(a=util_1.toBigNumber(a),s=util_1.toBigNumber(s),util_1.isSameHexValue(c,this.contractAddress))return[3,5];r=void 0,e.label=1;case 1:return e.trys.push([1,3,,4]),[4,this.nocustClient.contractApiService.allowance(c,o,this.contractAddress)];case 2:return r=e.sent(),[3,4];case 3:throw e.sent(),new Error("Could not check for token allowance");case 4:if(r.isLessThan(a))throw new Error("Insufficient token transfer allowance, please approve the NOCUST contract to transfer funds.");e.label=5;case 5:return e.trys.push([5,7,,8]),[4,this.nocustClient.contractApiService.deposit(c,a,o,this.contractAddress,s,i)];case 6:return t=e.sent(),[3,8];case 7:throw n=e.sent(),new nocust_manager_error_model_1.NOCUSTManagerError("Deposit transaction failed. Please verify gas (at least 80000), gas price, amount, contract address and ensure that you have enough Ether to pay for gas.",nocust_manager_error_model_1.NOCUSTError.PARENT_CHAIN_TRANSACTION_FAILURE,n);case 8:return[2,t]}})})},e.prototype.approveAndDeposit=function(s,i,c,u,l){return void 0===l&&(l=this.contractAddress),__awaiter(this,void 0,void 0,function(){var t,r,n,o,a;return __generator(this,function(e){switch(e.label){case 0:if(i=util_1.toBigNumber(i),c=util_1.toBigNumber(c),util_1.isSameHexValue(l,this.contractAddress))return[3,7];r=void 0,e.label=1;case 1:return e.trys.push([1,3,,4]),[4,this.nocustClient.contractApiService.allowance(l,s,this.contractAddress)];case 2:return r=e.sent(),[3,4];case 3:throw n=e.sent(),new nocust_manager_error_model_1.NOCUSTManagerError("Could not check for token allowance. Verify tokenAddress and contract address and RPC connection",nocust_manager_error_model_1.NOCUSTError.FETCH_PARENT_CHAIN_DATA_ERROR,n);case 4:return r.isLessThan(i)?[4,this.nocustClient.web3Service.rpc.eth.getTransactionCount(s)]:[3,7];case 5:return t=e.sent(),[4,this.nocustClient.contractApiService.enableERC20Deposits(l,s,this.contractAddress,c,3e5,t)];case 6:e.sent(),e.label=7;case 7:return e.trys.push([7,9,,10]),[4,this.nocustClient.contractApiService.deposit(l,i,s,this.contractAddress,c,u,t?t+1:void 0)];case 8:return o=e.sent(),[3,10];case 9:throw a=e.sent(),new nocust_manager_error_model_1.NOCUSTManagerError("Deposit transaction failed. Please verify gas (at least 80000), gas price, amount, contract address and ensure that you have enough Ether to pay for gas.",nocust_manager_error_model_1.NOCUSTError.PARENT_CHAIN_TRANSACTION_FAILURE,a);case 10:return[2,o]}})})},e.prototype.withdrawalRequest=function(l,_,d,h,g){return void 0===g&&(g=this.contractAddress),__awaiter(this,void 0,void 0,function(){var t,r,n,o,a,s,i,c,u;return __generator(this,function(e){switch(e.label){case 0:return _=util_1.toBigNumber(_),d=util_1.toBigNumber(d),[4,this.getSyncedWalletState(l,g,!0)];case 1:if(t=e.sent(),r=t.wallet,n=t.contractState,_.gt(r.withdrawableAmount))throw new nocust_manager_error_model_1.NOCUSTManagerError("You do not have enough withdrawal allowances (Yet). It is required to wait one full Eon (round) to pass for freshly received or deposited funds to be withdrawable.",nocust_manager_error_model_1.NOCUSTError.INSUFFICIENT_WITHDRAWAL_LIMIT);return util_1.isSameHexValue(g,this.contractAddress)?(o=r,a=t.contractState,[3,4]):[3,2];case 2:return[4,this.getSyncedWalletState(l,this.contractAddress,!0)];case 3:s=e.sent(),o=s.wallet,a=s.contractState,e.label=4;case 4:if(i=bignumber_js_1.default.maximum(a.challengeCost,d),o.onChainBalance.isLessThan(i.times(SLASH_GAS_COST)))throw new nocust_manager_error_model_1.NOCUSTManagerError("Not enough balance, to make a withdrawal request you are required to pay the gas fee PLUS a fee equal to max("+n.challengeCost+" wei, gasPrice) * "+SLASH_GAS_COST+". This amount needs to be available on-chain.",nocust_manager_error_model_1.NOCUSTError.NO_ETHER_TO_PAY_FOR_GAS);e.label=5;case 5:return e.trys.push([5,7,,8]),[4,this.nocustClient.contractApiService.requestWithdrawal(_,l,r.previousEon.proofOfExclusiveAllotment,this.contractAddress,i,d,h)];case 6:return c=e.sent(),[3,8];case 7:throw u=e.sent(),new nocust_manager_error_model_1.NOCUSTManagerError("On-chain transaction failed, please verify gas (need to be more than > 200000), gas price, amount, contract address and ensure that you have enough Ether to pay for gas.",nocust_manager_error_model_1.NOCUSTError.PARENT_CHAIN_TRANSACTION_FAILURE,u);case 8:return[2,c]}})})},e.prototype.withdrawalConfirmation=function(n,o,a,s){return void 0===s&&(s=this.contractAddress),__awaiter(this,void 0,void 0,function(){var t,r;return __generator(this,function(e){switch(e.label){case 0:o=util_1.toBigNumber(o),e.label=1;case 1:return e.trys.push([1,3,,4]),[4,this.nocustClient.contractApiService.confirmWithdrawal(s,n,this.contractAddress,o,a)];case 2:return t=e.sent(),[3,4];case 3:throw r=e.sent(),new nocust_manager_error_model_1.NOCUSTManagerError("On-chain transaction failed, please verify gas (need to be more than > 100000), gas price, amount and contract address.",nocust_manager_error_model_1.NOCUSTError.PARENT_CHAIN_TRANSACTION_FAILURE,r);case 4:return[2,t]}})})},e.prototype.getNOCUSTBalance=function(t,r){return void 0===r&&(r=this.contractAddress),__awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return[4,this.getSyncedWalletState(t,r,!1)];case 1:return[2,e.sent().wallet.offChainBalance]}})})},e.prototype.getSupportedTokens=function(){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return[4,this.nocustClient.operatorApiService.getTokensList(this.operatorApiUrl)];case 1:return[2,e.sent().map(function(e){return{tokenAddress:e.address,name:e.name,shortName:e.short_name}})]}})})},e.prototype.getTransaction=function(t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return[4,this.nocustClient.operatorApiService.getTransfersFromTxId(t,this.operatorApiUrl)];case 1:return[2,e.sent()]}})})},e.prototype.getTransactionsForAddress=function(t,r,n){return void 0===r&&(r=this.contractAddress),__awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return[4,this.nocustClient.operatorApiService.getWalletData(t,r,this.operatorApiUrl,n)];case 1:return[2,e.sent().transfers]}})})},e.prototype.getWithdrawalLimit=function(t,r){return void 0===r&&(r=this.contractAddress),__awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return[4,this.getSyncedWalletState(t,r,!1)];case 1:return[2,e.sent().wallet.withdrawableAmount]}})})},e.prototype.getOnChainBalance=function(t,r){return void 0===r&&(r=this.contractAddress),__awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return[4,this.getSyncedWalletState(t,r,!1)];case 1:return[2,e.sent().wallet.onChainBalance]}})})},e.prototype.getBlocksToWithdrawalConfirmation=function(i,c,u){return void 0===u&&(u=this.contractAddress),__awaiter(this,void 0,void 0,function(){var t,r,n,o,a,s;return __generator(this,function(e){switch(e.label){case 0:return[4,this.getSyncedWalletState(i,u,!1)];case 1:if(0===(t=e.sent().contractState).pendingWithdrawals.length)return[2,-1];if(!c)return[3,6];n=void 0,e.label=2;case 2:return e.trys.push([2,4,,5]),[4,this.nocustClient.web3Service.getOnChainTransactionReceipt(c)];case 3:return n=e.sent(),[3,5];case 4:throw o=e.sent(),new Error("Could not get on-chain transaction receipt, "+o);case 5:return r=contract_api_service_1.ContractApiService.eonNumberAt(n.blockNumber,t.genesis,t.blocksPerEon),[3,7];case 6:r=Math.min.apply(Math,t.pendingWithdrawals.map(function(e){return e.eonNumber})),e.label=7;case 7:return a=t.currentEonNumber,s=a-r,[2,Math.max(t.extendedSlackPeriod+t.blocksPerEon*(2-s)-t.currentSubBlock+1,0)]}})})},e.prototype.getWithdrawalFee=function(n){return __awaiter(this,void 0,void 0,function(){var t,r;return __generator(this,function(e){switch(e.label){case 0:return n=util_1.toBigNumber(n),r=bignumber_js_1.default.bind,[4,this.nocustClient.contractApiService.getChallengeCost(this.contractAddress)];case 1:return t=new(r.apply(bignumber_js_1.default,[void 0,e.sent()])),[2,bignumber_js_1.default.maximum(SLASH_GAS_COST.times(t),SLASH_GAS_COST.times(n))]}})})},e.prototype.getEonNumber=function(){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return[4,this.nocustClient.contractApiService.currentEonNumber(this.contractAddress)];case 1:return[2,e.sent()]}})})},e.prototype.getEraNumber=function(){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return[4,this.nocustClient.contractApiService.currentSubBlock(this.contractAddress)];case 1:return[2,e.sent()]}})})},e.prototype.getBlockPerEon=function(){return __awaiter(this,void 0,void 0,function(){var t;return __generator(this,function(e){switch(e.label){case 0:return t=parseInt,[4,this.nocustClient.contractApiService.getBlocksPerEon(this.contractAddress)];case 1:return[2,t.apply(void 0,[e.sent()])]}})})},e.prototype.getWalletState=function(t,r){return void 0===r&&(r=this.contractAddress),__awaiter(this,void 0,void 0,function(){return __generator(this,function(e){return[2,this.getSyncedWalletState(t,r,!1)]})})},e.prototype.getOrderBook=function(t,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(e){return[2,this.nocustClient.operatorApiService.getSwapOrders(t,r,this.operatorApiUrl)]})})},e.prototype.getSLADetail=function(){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(e){return[2,this.nocustClient.operatorApiService.getSLADetails({webAddress:this.operatorApiUrl})]})})},e.prototype.getSLAStatus=function(r){return __awaiter(this,void 0,void 0,function(){var t;return __generator(this,function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),[4,this.nocustClient.operatorApiService.getSLAStatus({webAddress:this.operatorApiUrl,address:r})];case 1:return t=e.sent(),[3,3];case 2:return e.sent(),[2,0];case 3:return t&&t.expiry?[2,new Date(t.expiry).getTime()]:[2,0]}})})},e.prototype.buySLA=function(n){return __awaiter(this,void 0,void 0,function(){var t,r;return __generator(this,function(e){switch(e.label){case 0:return[4,this.getSLADetail()];case 1:return t=e.sent(),[4,this.getSyncedWalletState(n,t.token,!0)];case 2:return r=e.sent().wallet,[4,this.getSLAStatus(n)];case 3:if(e.sent())return[2];if(r.offChainBalance.isLessThan(t.cost))throw new nocust_manager_error_model_1.NOCUSTManagerError("To pay for the SLA you need "+new bignumber_js_1.default(t.cost)+" wei of token "+t.token+" available as nocust funds",nocust_manager_error_model_1.NOCUSTError.INSUFFICIENT_COMMIT_CHAIN_BALANCE);return[4,this.sendTransaction({to:t.recipient,amount:new bignumber_js_1.default(t.cost),from:n,tokenAddress:t.token})];case 4:return e.sent(),[2]}})})},e.prototype.isRecovery=function(){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return[4,this.nocustClient.contractApiService.isPunished(this.contractAddress)];case 1:return[2,e.sent()]}})})},e.prototype.isAddressRegisteredWithOperator=function(r,n){return void 0===n&&(n=this.contractAddress),__awaiter(this,void 0,void 0,function(){var t;return __generator(this,function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),[4,this.nocustClient.operatorApiService.whoisWallet(n,r,this.operatorApiUrl)];case 1:return t=e.sent(),[3,3];case 2:return e.sent(),[2,!1];case 3:return[2,!!t&&!!t.operator_signature]}})})},e.prototype.sendSwap=function(n,o,a,s,i,c){return __awaiter(this,void 0,void 0,function(){var t,r;return __generator(this,function(e){switch(e.label){case 0:return s=util_1.toBigNumber(s),i=util_1.toBigNumber(i),c?[4,this.nocustClient.texService.getSubAccountSeed(n,c)]:[3,2];case 1:return t=e.sent(),[3,4];case 2:return[4,this.nocustClient.texService.getSubAccountSeed(n)];case 3:t=e.sent(),e.label=4;case 4:return e.trys.push([4,6,,7]),[4,this.nocustClient.texService.makeNonBlockingSwap({address:n,buyTokenAddress:o,sellTokenAddress:a,buyAmount:s,sellAmount:i,operatorApiUrl:this.operatorApiUrl,contractAddress:this.contractAddress,customSeed:t})];case 5:return[2,e.sent()];case 6:throw r=e.sent(),new nocust_manager_error_model_1.NOCUSTManagerError("Could not send swap.",nocust_manager_error_model_1.NOCUSTError.UNKNOWN_ERROR,r);case 7:return[2]}})})},e.prototype.synchronizeSwapOrders=function(n,o,a,s,i){return void 0===s&&(s=!1),__awaiter(this,void 0,void 0,function(){var t,r;return __generator(this,function(e){switch(e.label){case 0:return i?[4,this.nocustClient.texService.getSubAccountSeed(n,i)]:[3,2];case 1:return t=e.sent(),[3,4];case 2:return[4,this.nocustClient.texService.getSubAccountSeed(n)];case 3:t=e.sent(),e.label=4;case 4:return e.trys.push([4,6,,7]),[4,this.nocustClient.texService.swapSyncProcedure({address:n,buyTokenAddress:o,sellTokenAddress:a,seed:t,operatorApiUrl:this.operatorApiUrl,contractAddress:this.contractAddress,forceAdmission:s})];case 5:return[2,e.sent().pendingSwaps];case 6:throw r=e.sent(),new nocust_manager_error_model_1.NOCUSTManagerError("Could not sync swaps.",nocust_manager_error_model_1.NOCUSTError.UNKNOWN_ERROR,r);case 7:return[2]}})})},e.prototype.issueStateUpdateChallenge=function(o,a,s,i){return void 0===i&&(i=this.contractAddress),__awaiter(this,void 0,void 0,function(){var t,r,n;return __generator(this,function(e){switch(e.label){case 0:return[4,this.getSyncedWalletState(o,i,!0)];case 1:return t=e.sent(),r=t.wallet,n=t.contractState,[4,this.nocustClient.disputeService.canIssueStateUpdateChallenge(r,n)];case 2:if(!e.sent())throw Error("Cannot issue state update challenge at the moment");return[2,this.nocustClient.disputeService.issueStateUpdateChallenge(r,n,a,s)]}})})},e.prototype.issueDeliveryChallenge=function(a,s,i,c,u){return void 0===u&&(u=this.contractAddress),__awaiter(this,void 0,void 0,function(){var t,r,n,o;return __generator(this,function(e){switch(e.label){case 0:return[4,this.getSyncedWalletState(a,u,!0)];case 1:if(t=e.sent(),r=t.wallet,n=t.contractState,!(o=r.previousEon.activeState.transfers.find(function(e){return e.id.toNumber()===s})))throw Error("Could not find relevant transfer data for txId ${tx}. Only transfers from the previous eonNumber can be challenged.");return[2,this.nocustClient.disputeService.issueDeliveryChallenge(r,o,n,i,c)]}})})},e.prototype.recoverFunds=function(s,i,c,u){return void 0===u&&(u=this.contractAddress),__awaiter(this,void 0,void 0,function(){var t,r,n,o,a;return __generator(this,function(e){switch(e.label){case 0:return[4,this.getSyncedWalletState(s,u,!0)];case 1:return t=e.sent(),r=t.wallet,n=t.contractState,[4,this.nocustClient.disputeService.canRecoverAllFunds(r,n)];case 2:if(o=e.sent(),a=r.getEon(n.lastSubmissionEon-1),!o||!a||!a.proofOfExclusiveAllotment)throw Error("Cannot issue state update challenge at the moment");return[2,this.nocustClient.contractApiService.recoverAllFunds(a.proofOfExclusiveAllotment,i,c)]}})})},e.prototype.createWallet=function(o,a,s){return __awaiter(this,void 0,void 0,function(){var t,r,n;return __generator(this,function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),[4,this.nocustClient.contractApiService.getOperatorAccountAddress(this.contractAddress)];case 1:return r=e.sent(),[3,3];case 2:throw n=e.sent(),new Error("Could not get contract Owner, "+n);case 3:return t=new wallet_model_1.Wallet(o,s,r,this.contractAddress,a,this.operatorApiUrl),this.nocustClient.walletStorageService.saveWallet(t),[2,t]}})})},e.prototype.getSyncedWalletState=function(u,l,_){return __awaiter(this,void 0,void 0,function(){var t,r,n,o,a,s,i,c;return __generator(this,function(e){switch(e.label){case 0:return e.trys.push([0,3,,4]),[4,this.nocustClient.web3Service.networkId()];case 1:return n=e.sent(),[4,this.nocustClient.walletStorageService.loadWallet(u,n,this.contractAddress,l)];case 2:return t=e.sent(),[3,4];case 3:throw o=e.sent(),new nocust_manager_error_model_1.NOCUSTManagerError("Retrieving wallet from storage.",nocust_manager_error_model_1.NOCUSTError.UNKNOWN_ERROR,o);case 4:return t?[3,6]:(logging_1.Logging.debug("Wallet not found in permanent storage, create wallet object."),[4,this.createWallet(u,l,n)]);case 5:t=e.sent(),e.label=6;case 6:return logging_1.Logging.debug("Fetch contract and operator state"),[4,Promise.all([this.nocustClient.contractStateFetchService.fetchContractState(t).then(function(e){return logging_1.Logging.debug("Done fetching contract state"),e}).catch(function(e){throw new nocust_manager_error_model_1.NOCUSTManagerError("Could not fetch blockchain data",nocust_manager_error_model_1.NOCUSTError.FETCH_PARENT_CHAIN_DATA_ERROR,e)}),this.nocustClient.operatorStateService.fetchOperatorState(t).then(function(e){return logging_1.Logging.debug("Done fetching operator state"),e}).catch(function(e){throw new nocust_manager_error_model_1.NOCUSTManagerError("Could not fetch operator state data",nocust_manager_error_model_1.NOCUSTError.FETCH_OPERATOR_DATA_ERROR,e)})])];case 7:if(a=e.sent(),s=a[0],(i=a[1]).walletData)return[3,10];if(logging_1.Logging.debug("Unregistered wallet  "+u+" with operator for token "+l),!_)throw new nocust_manager_error_model_1.NOCUSTManagerError("Wallet address "+u+" is not registered with operator for token "+(util_1.isSameHexValue(l,this.contractAddress)?"Ether":l)+", can't execute operation.",nocust_manager_error_model_1.NOCUSTError.UNREGISTERED_WITH_COMMIT_CHAIN);return[4,this.registerAddressInternal(u,l)];case 8:return e.sent(),logging_1.Logging.debug("Fetch operator state..."),[4,this.nocustClient.operatorStateService.fetchOperatorState(t)];case 9:i=e.sent(),logging_1.Logging.debug("operator state fetched"),e.label=10;case 10:return e.trys.push([10,12,,13]),logging_1.Logging.debug("Sync wallet state.."),[4,this.nocustClient.walletStateService.syncWalletState(t,s,i)];case 11:return r=e.sent(),[3,13];case 12:throw c=e.sent(),new nocust_manager_error_model_1.NOCUSTManagerError("Could not sync wallet state.",nocust_manager_error_model_1.NOCUSTError.UNKNOWN_ERROR,c);case 13:if(logging_1.Logging.debug("Sync wallet state finished"),this.nocustClient.walletStorageService.saveWallet(r.wallet),r.updateError)throw new nocust_manager_error_model_1.NOCUSTManagerError("Could not Synchronize wallet state. Reason: "+r.updateError+" The account is potentially unsafe, you might need to initiate a challenge/recover.",nocust_manager_error_model_1.NOCUSTError.WALLET_STATE_ERROR);return[2,r]}})})},e.prototype.registerAddressInternal=function(f,S){return void 0===S&&(S=this.contractAddress),__awaiter(this,void 0,void 0,function(){var t,r,n,o,a,s,i,c,u,l,_,d,h,g,p;return __generator(this,function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),[4,this.nocustClient.web3Service.networkId()];case 1:return t=e.sent(),[3,3];case 2:throw r=e.sent(),new nocust_manager_error_model_1.NOCUSTManagerError("Could not fetch network ID. Verify your RPC connection.",nocust_manager_error_model_1.NOCUSTError.FETCH_PARENT_CHAIN_DATA_ERROR,r);case 3:return[4,this.createWallet(f,S,t)];case 4:n=e.sent(),logging_1.Logging.debug("Register wallet..."),e.label=5;case 5:return e.trys.push([5,7,,8]),[4,this.nocustClient.operatorApiService.getStatusData(this.operatorApiUrl)];case 6:return o=e.sent().latest.eon_number,[3,8];case 7:throw a=e.sent(),new nocust_manager_error_model_1.NOCUSTManagerError("Could not get current eonNumber. Verify your Hub API connection.",nocust_manager_error_model_1.NOCUSTError.FETCH_OPERATOR_DATA_ERROR,a);case 8:s=n.getAdmissionActiveState(o).hash,e.label=9;case 9:return e.trys.push([9,11,,12]),[4,this.nocustClient.contractApiService.sign(f,s)];case 10:return i=e.sent(),[3,12];case 11:throw c=e.sent(),new nocust_manager_error_model_1.NOCUSTManagerError("Could not sign transfer.",nocust_manager_error_model_1.NOCUSTError.SINGING_FAILURE,c);case 12:return logging_1.Logging.debug("Subscribe to registration websocket notifications..."),[4,this.nocustClient.operatorApiService.registerOperatorRegistrationWebSocketNotificationCallback({webAddress:this.operatorApiUrl,walletAddress:f,tokenAddress:S})];case 13:u=e.sent(),logging_1.Logging.debug("Subscribed to registration websocket notifications"),e.label=14;case 14:return e.trys.push([14,16,,17]),l=util_1.observableToPromiseWithTimeout(u,CONFIRMATION_TIMEOUT,new nocust_manager_error_model_1.NOCUSTManagerError("Registration confirmation timeout",nocust_manager_error_model_1.NOCUSTError.CONFIRMATION_TIMEOUT)),_=this.nocustClient.operatorApiService.register(n,i),logging_1.Logging.debug("Post registration..."),[4,Promise.all([l,_])];case 15:return d=e.sent(),h=d[0],d[1],logging_1.Logging.debug("Registration confirmed"),[2,h];case 16:throw 429===(g=e.sent()).code?(p=this.operatorApiUrl+util_1.addTrailingSlashToUrl(this.operatorApiUrl)+"whitelist/#address="+f,new nocust_manager_error_model_1.NOCUSTManagerError("Too many registration request, human verification required. Please whitelist your address at "+p,nocust_manager_error_model_1.NOCUSTError.REGISTRATION_THROTTLING)):g.code===nocust_manager_error_model_1.NOCUSTError.CONFIRMATION_TIMEOUT?g:-1<g.message.search("must make a unique set.")?new nocust_manager_error_model_1.NOCUSTManagerError("Wallet already registered",nocust_manager_error_model_1.NOCUSTError.NON_UNIQUE_TRANSFER):new nocust_manager_error_model_1.NOCUSTManagerError("Could not post registration.",nocust_manager_error_model_1.NOCUSTError.POST_FAILURE,g);case 17:return[2]}})})},e}();exports.NOCUSTManager=NOCUSTManager;