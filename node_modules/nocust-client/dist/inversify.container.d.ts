import 'reflect-metadata';
import { Container } from 'inversify';
import { NOCUSTClient, RestApiInterface } from '.';
import { Web3ServiceInterface } from './interfaces/web3-service.interface';
import { StorageManagerInterface } from './interfaces/storage-manager.interface';
import { LoggingInterface } from './interfaces/logging.interface';
import { RPCClientProviderInterface } from './interfaces/rpc-client-provider.interface';
export declare class NOCUSTClassFactory {
    private static createClassContainerInternal;
    static createClassContainer(config: ClassContainerConfiguration): Container;
    static createDefaultClassContainer(rpcApi: any): Container;
    static createNOCUSTClient(config: ClassContainerConfiguration): NOCUSTClient;
    static createDefaultNOCUSTClient(rpcApi: any): NOCUSTClient;
}
export interface ClassContainerConfiguration {
    rpcProvider: RPCClientProviderInterface | ClassContainerOption;
    web3Service: Web3ServiceInterface | ClassContainerOption;
    storageManager: StorageManagerInterface | ClassContainerOption;
    logging: LoggingInterface | ClassContainerOption;
    restApi: RestApiInterface | ClassContainerOption;
    subscribeToWeb3Connectivity: boolean;
}
export declare enum ClassContainerOption {
    DEFAULT = 0,
    NONE = 1
}
